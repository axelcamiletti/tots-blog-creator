// Test de conexi√≥n con Supabase
import { SupabaseService } from './src/services/supabaseService';
import dotenv from 'dotenv';

// Cargar variables de entorno
dotenv.config();

async function testSupabaseConnection() {
    console.log('üß™ Probando conexi√≥n con Supabase...\n');

    try {
        const supabaseService = new SupabaseService();
        console.log('‚úÖ Servicio de Supabase inicializado correctamente');

        // Probar obtener art√≠culos (deber√≠a devolver un array vac√≠o o con el art√≠culo de ejemplo)
        console.log('üìù Obteniendo art√≠culos...');
        const articles = await supabaseService.getArticles();
        console.log(`‚úÖ Art√≠culos encontrados: ${articles.length}`);
        
        if (articles.length > 0) {
            console.log('üìÑ Primer art√≠culo:', {
                id: articles[0].id,
                title: articles[0].title,
                segment: articles[0].segment,
                created_at: articles[0].created_at
            });
        }

        console.log('\nüéâ ¬°Conexi√≥n con Supabase exitosa!');
        console.log('\n‚úÖ Todo est√° configurado correctamente:');
        console.log('   - Base de datos PostgreSQL conectada');
        console.log('   - Tabla articles funcionando');
        console.log('   - Storage bucket configurado');
        console.log('   - Pol√≠ticas de seguridad activas');

    } catch (error) {
        console.error('‚ùå Error conectando con Supabase:', error);
        console.log('\nüîß Verifica:');
        console.log('   - SUPABASE_URL en .env');
        console.log('   - SUPABASE_ANON_KEY en .env');
        console.log('   - Que el proyecto de Supabase est√© activo');
        console.log('   - Que la tabla articles exista');
    }
}

// Ejecutar el test
testSupabaseConnection();
